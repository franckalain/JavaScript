WEBVTT

00:00.480 --> 00:01.950
Hello guys will come back.

00:02.050 --> 00:03.630
One never uses science.

00:03.880 --> 00:07.130
There's a need for encrypting the user's password.

00:07.350 --> 00:12.230
If it is not encrypted then hackers could easily enter the system.

00:12.240 --> 00:16.440
In this video we will learn how to encrypt the user's password.

00:16.710 --> 00:22.130
Let's go and solve this problem first we need to install one library and import it.

00:22.530 --> 00:32.450
And let's go to our terminal shift right click shares right click and open show and you seem to zone.

00:33.390 --> 00:37.740
US and check ins sir so sir.

00:38.300 --> 00:40.770
You want to clear with the NPM So

00:43.850 --> 00:45.970
why compete.

00:46.310 --> 00:52.960
Is she because you want to sell it to your pack that Jay song or specifically for this project.

00:52.960 --> 00:53.340
Answer

00:58.340 --> 01:00.480
and let's import the library.

01:00.590 --> 01:03.270
So it good to be in the studio.

01:03.530 --> 01:05.440
Right on.

01:05.700 --> 01:09.930
Sounds like you are.

01:10.260 --> 01:12.880
Why did you.

01:15.200 --> 01:15.700
By.

01:15.720 --> 01:19.790
No Jess is a library to encrypt any strings.

01:20.080 --> 01:23.020
So let's go ahead and do just that.

01:23.590 --> 02:34.070
So here is my.

02:34.210 --> 02:35.590
So what is going on here.

02:35.650 --> 02:41.250
We run a function by mongoose scheme called.

02:41.310 --> 02:47.680
So in a nutshell it will increase Depass password before saving the password attribute to the database.

02:47.970 --> 02:54.370
So we get to add safe parameter and a callback function called next next.

02:54.520 --> 02:59.310
It's just a callback when we refer the user to this.

02:59.340 --> 03:03.180
This is technically the user SECU myself.

03:03.340 --> 03:08.530
We checked if the feel of a password has been changed or uses new.

03:08.680 --> 03:10.960
Then we do a callback.

03:10.960 --> 03:18.610
Else we do the encryption method call hash we pass in the user password and then added two parameters

03:18.760 --> 03:20.200
which are all in.

03:20.320 --> 03:27.760
Finally we pass in a callback function with a parameter of error and the result of the callback which

03:27.760 --> 03:28.970
is hash.

03:29.210 --> 03:37.290
If password has been encrypted then we simply set it to the current password then we do callback.

03:37.330 --> 03:38.160
So that's it.

03:38.200 --> 03:46.190
Once we do that then before we save it to the database we have to hash the password and that's it.

03:46.240 --> 03:53.140
In this video we learn how to encrypt user password field and in the next video we will learn how to

03:53.140 --> 03:56.130
create a custom function to compare password.
