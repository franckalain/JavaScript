WEBVTT

00:00.380 --> 00:02.610
Help you guys in the section.

00:02.610 --> 00:08.940
Adam Petersen had a walk guys drew on the solid spot to add a new category and a new product to the

00:08.940 --> 00:10.160
database.

00:10.200 --> 00:16.890
We will learn specifically about finding products in a database true pagination and so on.

00:17.010 --> 00:22.850
In this video we learn how to get all the products in a specific category.

00:22.890 --> 00:26.060
Let's dive in before we dive in into writing coats.

00:26.070 --> 00:29.370
They are to express requests a need to know first.

00:29.480 --> 00:35.190
It's a request that parents that ID someone showing an example open up to you and I want to show you

00:35.190 --> 00:36.380
something.

00:36.390 --> 00:50.580
So for example if the L is a jump all API categories and this double dog ID to get the specific ID you

00:50.580 --> 00:55.800
have to do requests to parents that I need.

00:55.800 --> 01:04.500
So let's say the IP is equivalent to all this and then by doing request of parents ID it is equivalent

01:04.500 --> 01:06.260
to Austin.

01:06.590 --> 01:14.910
Another one is requests that querido requests that query requests a query is not a way to get the current

01:14.910 --> 01:16.870
value from the U or l.

01:17.190 --> 01:26.740
So for example if the URL is API categories and then there will be for example name brand name and then

01:27.770 --> 01:36.550
any variable vehicles you will jump on and you value.

01:37.200 --> 01:46.550
So in order for you to get this value you have to request Querrey dot and the variable.

01:47.010 --> 01:53.190
So you use to cause a coil when you search for the product or search engine and so on.

01:53.190 --> 02:03.840
So for example let's go to Google and let's search something here and lo and as can see search and then

02:03.900 --> 02:06.600
questionmark source equals to devalue.

02:06.690 --> 02:07.980
All right.

02:08.050 --> 02:09.190
Simple as that.

02:09.220 --> 02:12.740
So let's go back to our visual studio and let's remove this.

02:13.450 --> 02:15.970
And we want to go to Maine.

02:16.080 --> 02:16.660
Yes.

02:16.690 --> 02:21.280
And we want to create our categories I.D. API.

02:21.520 --> 02:23.140
So let's go ahead and do it.

02:23.260 --> 02:24.470
So router

02:27.170 --> 02:27.500
Jack

03:17.900 --> 03:23.750
what we're doing is pretty straightforward we set per page DeCosta 10 so that we can divide with the

03:23.750 --> 03:26.700
total numbers of the products.

03:26.840 --> 03:33.470
Then we find all the products that belong to the specific category which is for general Questor parents

03:33.470 --> 03:42.050
that ID so save the ID is books that we want to find all the products that belong to the specific ID.

03:42.500 --> 03:49.340
So in order for us to do that we capture the parameter which you request to parents that ID then we

03:49.340 --> 03:55.730
want to populate the category field so that we can use the information you know instead just the object

03:55.730 --> 03:59.650
ID then we run exec.

03:59.800 --> 04:04.490
Finally we run another monkish operation which is counted.

04:04.740 --> 04:08.940
So we are counting how many products that belongs to this specific category.

04:09.840 --> 04:19.180
Finally we just responds with the Jasons object in the in the body the are success to true message to

04:19.200 --> 04:23.740
category products to product which is something that we we really need.

04:24.660 --> 04:29.190
Would be category and then we have total products.

04:29.420 --> 04:34.430
And finally we have pages we want to divide 200 by 10.

04:34.430 --> 04:42.790
So for example if we have total of the products two hundred divided by the end then we have 20 pages.

04:42.920 --> 04:47.050
So thats about it.

04:47.180 --> 04:53.790
So we use math that seal to return the smallest integer greater than or equal to a given number.

04:53.840 --> 04:55.550
So let us test this out.

04:55.550 --> 04:57.660
So go ahead and do it at.

04:57.740 --> 04:59.360
So we want to go to postman

05:04.000 --> 05:09.030
and you will go to Google hosted the API categories and you want to click send

05:11.740 --> 05:14.170
so there's probably cannot get any response.

05:14.170 --> 05:15.130
Why.

05:15.160 --> 05:16.330
Because we haven't started sell.

05:16.340 --> 05:18.450
So is going to do it.

05:23.150 --> 05:26.960
And you happen to awesome to be connected to the database awesome.

05:26.960 --> 05:29.980
And let's go to Kreuk.

05:30.250 --> 05:35.070
And now we have multiple categories we have cats books utensils talking.

05:35.080 --> 05:37.910
And one more and I don't know why.

05:38.270 --> 05:38.570
OK.

05:38.620 --> 05:47.230
Let's go ahead and grab cats and then we want to go back to we want to open a new tab

05:56.690 --> 06:01.680
and you want to go and send products that is fine.

06:01.680 --> 06:09.100
Let's go back to our studio and we've got to require product.

06:09.180 --> 06:12.380
So based on here

06:17.450 --> 06:23.730
Products see this just go back to our shell and check what is a problem connected.

06:24.040 --> 06:27.140
So I said one the time voting booth.

06:27.160 --> 06:36.170
There we have we have all the you know cats products like for example we have licensed you tuna.

06:36.360 --> 06:38.020
We have all of this.

06:38.030 --> 06:47.770
And then if you go down the bottom we have category name caps to the products 22.

06:48.080 --> 06:52.830
And we have pages treat so.

06:52.990 --> 06:57.200
So if you go back to your studio you can take a look at Cowdray.

06:57.220 --> 07:00.240
There are few problems with this approach.

07:00.280 --> 07:08.950
First we are finding all the products are at if we have 3000 products that we are simply returning 3000

07:08.970 --> 07:12.500
products to the front end which is not skillful.

07:12.840 --> 07:17.080
What if we have 10000 or hundred thousand products.

07:17.090 --> 07:24.440
The second problem is we should not do mongs operation under mongooses upper if we have many mongoose

07:24.680 --> 07:31.760
under you know many mongoose operation under Mungo's operations that we will get called backhaul and

07:31.760 --> 07:34.360
that is something that we want to avoid.

07:34.700 --> 07:39.810
Finally is the category name so this one right.

07:39.950 --> 07:44.550
We should not depend on the products aere to get the category name.

07:44.600 --> 07:46.520
It is a really bad practice.

07:46.700 --> 07:53.460
What if there is no products under this category then products Zero be no does.

07:53.510 --> 07:56.070
Our app will crash.

07:56.140 --> 08:00.250
These are the three problems that we need to fix in the next couple of videos.

08:00.530 --> 08:06.080
In this video we learn how to find a product that belong when we learn how to find products that belong

08:06.080 --> 08:09.130
to a specific category in the next video.

08:09.400 --> 08:11.920
We will learn about pagination in details.

08:11.930 --> 08:13.510
I'll see you guys in the next few.
