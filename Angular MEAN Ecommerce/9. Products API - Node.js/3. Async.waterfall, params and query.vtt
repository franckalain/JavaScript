WEBVTT

00:00.660 --> 00:05.910
Hello guys in this video we will learn how to use a new library called a saying.

00:05.910 --> 00:12.440
Before we dive in into pagination So the first thing you want to do is you want to go to your terminal

00:13.200 --> 00:20.760
and you want to install a sink and start saying gosh dashi.

00:22.970 --> 00:24.570
I want to go back to read mean.

00:24.630 --> 00:25.240
Yes.

00:25.270 --> 00:34.730
And we want to require that file or imported file seem to require the same.

00:34.950 --> 00:40.210
So I'm going to write a test so we can be right or get

00:43.100 --> 00:44.390
class

00:50.810 --> 00:52.840
so soon.

00:53.970 --> 00:55.430
Daut waterfall

00:58.560 --> 01:01.850
So a C waterfall is pretty straight forward.

01:02.280 --> 01:08.520
So technically why do we need to seeing waterfall is because we want to run multiple mongoose operations.

01:08.520 --> 01:17.940
So in a waterfall we can do multiple functions but the waterfall is the second function depends on the

01:17.940 --> 01:19.050
first function.

01:19.410 --> 01:22.000
So this was Let us take a look at the real example.

01:22.000 --> 01:29.310
So for example we have first function number one we give them one callback

01:32.280 --> 01:43.200
function will have the first name equals to rush and then wanted to call back on passing now and then

01:43.320 --> 01:53.800
the first variable and then we have a function and we going to give you the number to call back.

01:54.510 --> 01:58.690
And then what we're going to do here we can do mean close to the

02:04.250 --> 02:07.810
and in here we want to do is we want to do so long

02:10.980 --> 02:28.130
and do some six.

02:29.030 --> 02:38.570
So we want to at number one number two and we've got to do one thing at first.

02:39.560 --> 02:44.120
So what happens is this function is depending on this function.

02:44.120 --> 02:47.930
So number one function will run first and then all the callback.

02:47.990 --> 02:53.930
So once it runs call back it will actually go to the second function and it will pass the value which

02:53.930 --> 02:56.750
is the first name into the second function.

02:56.770 --> 03:05.200
The second function can use the variable from the first function because we just passively here.

03:05.220 --> 03:12.360
So once we do that then only we can do consider a long first name and last name so that we can use the

03:12.360 --> 03:18.250
first function variable and as well as the last name variable from the number two function.

03:18.270 --> 03:24.180
I know it's kind of confusing but this is just remember that function will never run a function one

03:24.180 --> 03:30.660
never do callback ones function one do call back then only it will go to the next one.

03:30.660 --> 03:31.660
Number one.

03:31.710 --> 03:34.960
Number two something exactly like a waterfall.

03:35.280 --> 03:36.740
So go ahead and test this right.

03:36.740 --> 03:42.520
So it was good to postman was opened up.

03:42.600 --> 03:47.190
You want to look close to the eye and there.

03:47.300 --> 03:48.620
Yes.

03:48.870 --> 03:51.730
And then when I do send loading loading.

03:51.750 --> 03:56.860
But if you go to here and you can run this to

04:02.320 --> 04:03.150
connect it.

04:03.470 --> 04:04.240
Whoops.

04:04.240 --> 04:04.630
All right.

04:04.690 --> 04:12.020
So it was great and Saturday loading unloading those good here and it shows a Shanghai awesome.

04:12.070 --> 04:18.130
So technically it would behave exactly like a waterfall like you know the first wave and then a second

04:18.130 --> 04:19.280
wave and so on.

04:19.600 --> 04:28.970
So in the next video we will fix our categories API to suit the need which is we're going to use a single

04:28.990 --> 04:31.930
waterfall to make it more scalable.

04:31.930 --> 04:33.680
I'll see you guys in the next.
